import React from 'react';
import { CompletedTest, UserProfileData } from '@/types/amc';

interface ProgressReportProps {
  profile: UserProfileData | null;
  tests: CompletedTest[];
  stats: any; // Using 'any' for now, will define a proper type later
}

const calculateAverage = (tests: CompletedTest[]) => {
  if (tests.length === 0) return '0.0';
  const total = tests.reduce((acc, test) => acc + (test.score / (test.testType === 'amc8' ? 25 : 150)) * 100, 0);
  return (total / tests.length).toFixed(1);
};

const calculateBest = (tests: CompletedTest[]) => {
  if (tests.length === 0) return '0.0';
  const best = Math.max(...tests.map(test => (test.score / (test.testType === 'amc8' ? 25 : 150)) * 100));
  return best.toFixed(1);
};

export const ProgressReport: React.FC<ProgressReportProps> = ({ profile, tests, stats }) => {
  return (
    <div className="p-8 bg-white text-black w-[210mm] h-[297mm]">
      <header className="text-center mb-8 border-b-2 pb-4 border-gray-300">
        <h1 className="text-4xl font-bold text-gray-800">AMC Math Mastery Report</h1>
        <p className="text-lg text-gray-600">Progress for {profile?.name || 'Student'}</p>
        <p className="text-sm text-gray-500">Report generated on: {new Date().toLocaleDateString()}</p>
      </header>

      <main>
        <section className="mb-8">
          <h2 className="text-2xl font-semibold text-gray-700 mb-4">Overall Statistics</h2>
          <div className="grid grid-cols-3 gap-4 text-center">
            <div className="p-4 bg-gray-100 rounded-lg">
              <p className="text-sm text-gray-500">Total Tests</p>
              <p className="text-2xl font-bold">{tests.length}</p>
            </div>
            <div className="p-4 bg-gray-100 rounded-lg">
              <p className="text-sm text-gray-500">Average Score</p>
              <p className="text-2xl font-bold">{calculateAverage(tests)}%</p>
            </div>
            <div className="p-4 bg-gray-100 rounded-lg">
              <p className="text-sm text-gray-500">Best Score</p>
              <p className="text-2xl font-bold">{calculateBest(tests)}%</p>
            </div>
          </div>
        </section>

        <section>
          <h2 className="text-2xl font-semibold text-gray-700 mt-8 mb-4">Test History</h2>
          <table className="w-full text-left border-collapse">
            <thead>
              <tr>
                <th className="py-2 px-4 bg-gray-200 border-b">Date</th>
                <th className="py-2 px-4 bg-gray-200 border-b">Test Type</th>
                <th className="py-2 px-4 bg-gray-200 border-b">Score</th>
              </tr>
            </thead>
            <tbody>
              {tests.map((test, index) => (
                <tr key={index} className="hover:bg-gray-50">
                  <td className="py-2 px-4 border-b">{new Date(test.date).toLocaleDateString()}</td>
                  <td className="py-2 px-4 border-b">{test.testType.toUpperCase()}</td>
                  <td className="py-2 px-4 border-b">{test.score} / {test.testType === 'amc8' ? 25 : 150}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </section>
      </main>

      <footer className="text-center mt-8 pt-4 border-t-2 border-gray-300 text-xs text-gray-400">
        <p>Generated by AMC Math Mastery Tracker</p>
      </footer>
    </div>
  );
};
